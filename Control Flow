                                                      BOOLEAN EXPRESSIONS
  1. Determine if the following statements are boolean expressions or not. If they are, set the matching variable to the right to "Yes" and if not set the variable to "No". 
Here’s an example of what to do:
Example statement:
"My dog is the cutest dog in the world."
This is an opinion and not a boolean expression, so you would set example_statement to "No" in the editor to the right. Okay, now it’s your turn:
//
- Statement one:
Dogs are mammals. 
- Statement two:
My dog is named Pavel.
- Statement three:
Dogs make the best pets.
- Statement four:
Cats are female dogs.
                                                      RELATIONAL OPERATORS: EQUALS AND NOT EQUALS
  2. Determine if the following boolean expressions are True or False. Input your answer as True or False in the appropriate variable to the right.
          Statement one:
          (5 * 2) - 1 == 8 + 1
          Statement two:
          13 - 6 != (3 * 2) + 1
          Statement three:
          3 * (2 - 1) == 4 - 1
//
statement_one = True
statement_two = False
statement_three = True

                                                      BOOLEAN VARIABLES
  3.1 Create a variable named my_baby_bool and set it equal to the string "true".
//
my_baby_bool = "true"
  3.2 Check the type of my_baby_bool using type(my_baby_bool). You’ll have to print it to get the results to display in the terminal.  
//
my_baby_bool = "true"
print(type(my_baby_bool))
  3.3 It’s not a boolean variable! Boolean values True and False always need to be capitalized and do not have quotation marks. Create a variable named my_baby_bool_two and set it equal to True.
//
my_baby_bool = "true"
print(type(my_baby_bool))
my_baby_bool_two = True
  3.4 Check the type of my_baby_bool_two and make sure you successfully created a boolean variable. You’ll have to print it to get the results to display in the terminal.
//
my_baby_bool = "true"
print(type(my_baby_bool))
my_baby_bool_two = True
print(type(my_baby_bool_two))

                                                      IF STATEMENTS
  4.1 In script.py, there is an if statement. I wrote this because my coworker Dave kept using my computer without permission and he is a real doofus. If the user_name is Dave, it tells him to stay off my computer.
Enter a user name in the field for user_name and try running the program. 
//
user_name = "Dave"
if user_name = "Dave":
  print("Get off my computer Dave!")

  4.2 Oh no! We got a SyntaxError! This happens when we make a small error in the syntax of the conditional statement. Read through the error message carefully and see 
if you can find the error. Then, fix it, and run the code again.
//
user_name = "Dave"
if user_name == "Dave":
  print("Get off my computer Dave!")
  4.3 Set your user_name to be angela_catlady_87. Update the program with a second if statement so it checks for Angela’s user name as well and prints "I know it is you, Dave! Go away!" in response.
//
user_name = "angela_catlady_87"
if user_name == "Dave":
  print("Get off my computer Dave!")
if user_name == "angela_catlady_87":
  print("I know it is you, Dave! Go away!")

                                                      RELATIONAL OPERATORS II
  5.1 Create an if statement that checks if x and y are equal, print the string below if so: "These numbers are the same"
//
x = 20
y = 20
if x==y:
  print("These numbers are the same")

  5.2  The nearby college, Calvin Coolidge’s Cool College (or 4C, as the locals call it) requires students to earn 120 credits to graduate. Write an if statement that checks if the student 
has enough credits to graduate. If they do, print the string: "You have enough credits to graduate!"
//
credits = 120
if credits >= 120:
  print("You have enough credits to graduate!")

                                                      BOOLEAN OPERATORS: AND
  6.1 Set the variables statement_one and statement_two equal to the results of the following boolean expressions:
Statement one:
(2 + 2 + 2 >= 6) and (-1 * -1 < 0)
Statement two:
(4 * 2 <= 8) and (7 - 1 == 6)
//
statement_one = False
statement_two = True

  6.2 Let’s return to Calvin Coolidge’s Cool College. 120 credits aren’t the only graduation requirement, you also need to have a GPA of 2.0 or higher. Rewrite the if statement so that 
it checks to see if a student meets both requirements using an and statement.
If they do, print the string:
"You meet the requirements to graduate!"
//
if credits >= 120 and gpa >= 2.0 :
  print("You meet the requirements to graduate!")

                                                      BOOLEAN OPERATORS: OR
  7.1 Set the variables statement_one and statement_two equal to the results of the following boolean expressions:
Statement one:
(2 - 1 > 3) or (-5 * 2 == -10)
Statement two:
(9 + 5 <= 15) or (7 != 4 + 3)
//
statement_one = True
statement_two = True

  7.2 The registrar’s office at Calvin Coolidge’s Cool College has another request. They want to send out a mailer with information on the commencement ceremonies to students who have 
met at least one requirement for graduation (120 credits and 2.0 GPA).
Write an if statement that checks if a student either has 120 or more credits or a GPA 2.0 or higher, and if so prints:
"You have met at least one of the requirements."
//
if credits >= 120 or gpa >= 2.0:
  print("You have met at least one of the requirements.")

                                                      BOOLEAN OPERATORS: NOT
  8.1 Set the variables statement_one and statement_two equal to the results of the following boolean expressions:
Statement one:
not (4 + 5 <= 9)
Statement two:
not (8 * 2) != 20 - 4
//
statement_one = False
statement_two = True
  8.2 The registrar’s office at Calvin Coolidge’s Cool College has been so impressed with your work so far that they have another task for you.
They want you to return to a previous if statement and add in several checks using and and not statements:
- If a student’s credits is not greater or equal to 120, it should print:
"You do not have enough credits to graduate."
- If their gpa is not greater or equal to 2.0, it should print:
"Your GPA is not high enough to graduate."
- If their credits is not greater than or equal to 120 and their gpa is not greater than or equal to 2.0, it should print:
"You do not meet either requirement to graduate!"
Make sure your return value matches those strings exactly. Capitalization, punctuation, and spaces matter!
//
if not credits >=120:
  print("You do not have enough credits to graduate.")
if not gpa >= 2.0:
  print("Your GPA is not high enough to graduate.")
if not credits >= 120 and not gpa >= 2.0:
  print("You do not meet either requirement to graduate!")              returns "Your GPA is not high enough to graduate."


                                                            
